{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAClCC,EAAe,CAAEL,WAAUC,SAE/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,GACFK,EAAQF,GAEVG,EAAOH,MArCII,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAQC,iBAMR,IAJA,IAAIC,EAAQC,OAAOH,EAAQI,cAAcf,MAAMgB,OACzCC,EAAOH,OAAOH,EAAQI,cAAcE,KAAKD,OACzCE,EAASJ,OAAOH,EAAQI,cAAcG,OAAOF,OAE1CG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YACE,W,OACE1B,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,SAC7DA,MAGL0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YACE,W,OAAM1B,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,SAChEA,MAGNa,GAASI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(element) {\n  element.preventDefault();\n\n  let delay = Number(element.currentTarget.delay.value);\n  const step = Number(element.currentTarget.step.value);\n  const amount = Number(element.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(\n          () =>\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`),\n          delay\n        );\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(\n          () => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`),\n          delay\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promiseValue = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseValue);\n    }\n    reject(promiseValue);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","element","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.68a03b3f.js.map"}